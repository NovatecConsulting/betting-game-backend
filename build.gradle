plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.72'
    id 'io.quarkus'
    id 'io.gitlab.arturbosch.detekt' version '1.14.1'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.3.72'
}

group 'io.gitlab.arturbosch'


repositories {
    mavenLocal()
    mavenCentral()
    jcenter {
        content {
            includeGroup "org.jetbrains.kotlinx"
        }
    }
}

detekt {
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$projectDir/detekt/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$projectDir/detekt/baseline.xml") // a way of suppressing issues before introducing detekt

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files
    }
}

tasks.detekt.jvmTarget = "1.8"

dependencies {
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-cache'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache-kotlin'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-agroal'
    implementation 'io.quarkus:quarkus-jdbc-h2'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile group: 'io.quarkus', name: 'quarkus-smallrye-openapi', version: '1.8.2.Final'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:kotlin-extensions'
    testImplementation 'com.tngtech.archunit:archunit:0.14.1'
    testImplementation 'io.quarkus:quarkus-test-h2'

    testCompile 'io.mockk:mockk:1.10.2'
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    testCompile 'com.github.tomakehurst:wiremock-jre8:2.27.0'
    testCompile 'org.assertj:assertj-core:3.17.1'

}

group 'org.acme'
version '1.0.0-SNAPSHOT'

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
    annotation("javax.persistence.Entity")
}

noArg {
    annotation('javax.persistence.Entity')
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}
test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
